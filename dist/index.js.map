{"version":3,"sources":["../index.ts","../constants.ts"],"sourcesContent":["import html2canvas from \"html2canvas\";\r\nimport { CONSTANTS, DEFAULTS } from \"./constants\";\r\nimport { HandlePrintScreen } from \"./types\";\r\n\r\nexport async function handlePrintScreen(props: HandlePrintScreen): Promise<string> {\r\n    let isDragging = false;\r\n    let initX = 0;\r\n    let initY = 0;\r\n    let base64PrintScreen = \"\";\r\n    const root = document.getElementById(props.rootElementID) as HTMLElement;\r\n    const rootCanvas = await html2canvas(root, DEFAULTS);\r\n    rootCanvas.style.position = CONSTANTS.position;\r\n    rootCanvas.style.top = CONSTANTS.top;\r\n    rootCanvas.style.left = CONSTANTS.left;\r\n    rootCanvas.style.cursor = props.cursorType\r\n        ? props.cursorType\r\n        : CONSTANTS.cursorType;\r\n    const backgroundCanvasLayer = document.createElement(\"canvas\");\r\n    backgroundCanvasLayer.width = rootCanvas.width;\r\n    backgroundCanvasLayer.height = rootCanvas.height;\r\n    backgroundCanvasLayer.style.cursor = props.cursorType\r\n        ? props.cursorType\r\n        : CONSTANTS.cursorType;\r\n    backgroundCanvasLayer.style.backgroundColor = props.backgroundColor\r\n        ? props.backgroundColor\r\n        : CONSTANTS.backgroundColor;\r\n    backgroundCanvasLayer.style.opacity = props.opacity\r\n        ? props.opacity\r\n        : CONSTANTS.opacity;\r\n    backgroundCanvasLayer.style.position = CONSTANTS.position;\r\n    backgroundCanvasLayer.style.top = CONSTANTS.top;\r\n    backgroundCanvasLayer.style.left = CONSTANTS.left;\r\n    const backgroundContext = backgroundCanvasLayer.getContext(\r\n        \"2d\"\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    root.appendChild(rootCanvas);\r\n    root.appendChild(backgroundCanvasLayer);\r\n\r\n    backgroundCanvasLayer.addEventListener(\"mousedown\", (e) => {\r\n        isDragging = true;\r\n        initX = e.clientX;\r\n        initY = e.clientY;\r\n    });\r\n\r\n    backgroundCanvasLayer.addEventListener(\"mouseup\", (e) => {\r\n        isDragging = false;\r\n        const printCanvas = document.createElement(\"canvas\");\r\n        printCanvas.width = e.clientX - initX;\r\n        printCanvas.height = e.clientY - initY;\r\n        const printContext = printCanvas.getContext(\r\n            \"2d\"\r\n        ) as CanvasRenderingContext2D;\r\n        printContext.drawImage(\r\n            rootCanvas,\r\n            initX + scrollX,\r\n            initY + scrollY,\r\n            e.clientX - initX,\r\n            e.clientY - initY,\r\n            0,\r\n            0,\r\n            e.clientX - initX,\r\n            e.clientY - initY\r\n        );\r\n        const dataURL = printContext.canvas.toDataURL(\"image/png\", 1.0);\r\n        const image = new Image();\r\n        image.src = dataURL;\r\n        base64PrintScreen = dataURL;\r\n        props.copyToClipboard && navigator.clipboard.writeText(image.src);\r\n    });\r\n\r\n    backgroundCanvasLayer.addEventListener(\"mousemove\", (e) => {\r\n        if (isDragging) {\r\n            backgroundContext.clearRect(0, 0, rootCanvas.width, rootCanvas.height);\r\n            backgroundContext.strokeStyle = props.printAreaBorderColor\r\n                ? props.printAreaBorderColor\r\n                : CONSTANTS.printAreaBorderColor;\r\n            backgroundContext.lineWidth = props.printAreaBorderWidth\r\n                ? props.printAreaBorderWidth\r\n                : CONSTANTS.printAreaBorderWidth;\r\n            backgroundContext.strokeRect(\r\n                initX + scrollX,\r\n                initY + scrollY,\r\n                e.clientX - initX,\r\n                e.clientY - initY\r\n            );\r\n            backgroundContext.drawImage(\r\n                rootCanvas,\r\n                initX + scrollX,\r\n                initY + scrollY,\r\n                e.clientX - initX,\r\n                e.clientY - initY,\r\n                initX + scrollX,\r\n                initY + scrollY,\r\n                e.clientX - initX,\r\n                e.clientY - initY\r\n            );\r\n        }\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        if (e.key === \"Escape\") {\r\n            let canvas = document.getElementsByTagName(\"canvas\")[0];\r\n            if (canvas !== undefined) {\r\n                root.removeChild(rootCanvas);\r\n                root.removeChild(backgroundCanvasLayer);\r\n            }\r\n        }\r\n    });\r\n\r\n    return base64PrintScreen;\r\n}\r\n\r\nexport async function printComponent(props: HandlePrintScreen): Promise<string> {\r\n    let base64PrintScreen = \"\";\r\n    const root = document.getElementById(props.rootElementID) as HTMLElement;\r\n    const rootCanvas = await html2canvas(root, DEFAULTS);\r\n    const dataURL = rootCanvas.toDataURL(\"image/png\", 1.0);\r\n    const image = new Image();\r\n    image.src = dataURL;\r\n    base64PrintScreen = dataURL;\r\n    props.copyToClipboard && navigator.clipboard.writeText(image.src);\r\n\r\n    return base64PrintScreen;\r\n}\r\n\r\nexport async function printComponentWithDrawImage(props: HandlePrintScreen): Promise<string> {\r\n    const root = document.getElementById(props.rootElementID) as HTMLElement;\r\n    const rootCanvas = await html2canvas(root, DEFAULTS);\r\n    const printContext = rootCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    printContext.drawImage(\r\n        rootCanvas,\r\n        0,\r\n        0,\r\n        rootCanvas.width,\r\n        rootCanvas.height,\r\n        0,\r\n        0,\r\n        rootCanvas.width,\r\n        rootCanvas.height\r\n    );\r\n    const dataURL = printContext.canvas.toDataURL(\"image/png\", 1.0);\r\n    const image = new Image();\r\n    image.src = dataURL;\r\n    const base64PrintScreen = dataURL;\r\n    props.copyToClipboard && navigator.clipboard.writeText(image.src);\r\n\r\n    return base64PrintScreen;\r\n}","export const CONSTANTS = {\r\n    rootElementID: \"root\",\r\n    backgroundColor: \"#000\",\r\n    opacity: \"0.6\",\r\n    printAreaBorderWidth: 2,\r\n    printAreaBorderColor: \"#000\",\r\n    cursorType: \"crosshair\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n  };\r\n\r\n  export const DEFAULTS = {\r\n    foreignObjectRendering: true,\r\n    windowHeight: document.documentElement.clientHeight,\r\n    windowWidth: document.documentElement.clientWidth,\r\n    removeContainer: true,\r\n    scale: 1,\r\n    allowTaint: true,\r\n    useCORS: true,\r\n    logging: true,\r\n  }"],"mappings":"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","names":[]}